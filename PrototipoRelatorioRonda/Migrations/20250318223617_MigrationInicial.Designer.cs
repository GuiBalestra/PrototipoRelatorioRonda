// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrototipoRelatorioRonda.Data;

#nullable disable

namespace PrototipoRelatorioRonda.Migrations
{
    [DbContext(typeof(RelatorioRondaContext))]
    [Migration("20250318223617_MigrationInicial")]
    partial class MigrationInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PrototipoRelatorioRonda.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Empresa", (string)null);
                });

            modelBuilder.Entity("PrototipoRelatorioRonda.Models.RelatorioRonda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<decimal?>("KmChegada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("KmSaida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TestemunhaChegada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestemunhaSaida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VigilanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VigilanteId");

                    b.HasIndex("EmpresaId", "Data");

                    b.ToTable("RelatoriosRonda", (string)null);
                });

            modelBuilder.Entity("PrototipoRelatorioRonda.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("Funcao")
                        .HasColumnType("int");

                    b.Property<string>("HashSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("PrototipoRelatorioRonda.Models.VoltaRonda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraChegada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraDescanso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraSaida")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroVolta")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RelatorioRondaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RelatorioRondaId", "NumeroVolta")
                        .IsUnique();

                    b.ToTable("VoltasRonda", (string)null);
                });

            modelBuilder.Entity("PrototipoRelatorioRonda.Models.RelatorioRonda", b =>
                {
                    b.HasOne("PrototipoRelatorioRonda.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrototipoRelatorioRonda.Models.Usuario", "Vigilante")
                        .WithMany()
                        .HasForeignKey("VigilanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Vigilante");
                });

            modelBuilder.Entity("PrototipoRelatorioRonda.Models.Usuario", b =>
                {
                    b.HasOne("PrototipoRelatorioRonda.Models.Empresa", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("PrototipoRelatorioRonda.Models.VoltaRonda", b =>
                {
                    b.HasOne("PrototipoRelatorioRonda.Models.RelatorioRonda", "RelatorioRonda")
                        .WithMany("Voltas")
                        .HasForeignKey("RelatorioRondaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RelatorioRonda");
                });

            modelBuilder.Entity("PrototipoRelatorioRonda.Models.Empresa", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PrototipoRelatorioRonda.Models.RelatorioRonda", b =>
                {
                    b.Navigation("Voltas");
                });
#pragma warning restore 612, 618
        }
    }
}
